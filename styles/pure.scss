@function find_gcd($a, $b) {
  @if $b == 0 {
    @return $a;
  }

  @return find_gcd($b, $a % $b);
}

@function compute_class_name($num_of_columns, $total_columns: "", $screen_size: "") {
  @if $screen_size != ""{
    @if $total_columns != "" {
      @return ".pure-u-" + $screen_size + "-" + $num_of_columns + "-" + $total_columns;
    }
    @return ".pure-u-" + $screen_size + "-" + $num_of_columns;
  }

  @if $total_columns != "" {
    @return ".pure-u-" + $num_of_columns + "-" + $total_columns;
  }

  @return ".pure-u-" + $num_of_columns;
}

$supported_columns: (5, 24);
$supported_screen_sizes: ("": 0, 'sm': 35.5em, 'md': 48em, 'ld': 64em, 'xl': 80em);

@each $screen_size, $min_width in $supported_screen_sizes {
  $classes: ();
  
  // (<ratio>: (class1, class2, ...) );
  $class_map: ();
  $passed_case_1: false;

  @debug map-get($class_map, ""); // null

  @each $total_columns in $supported_columns {
    @for $num_of_columns from 1 through $total_columns {
      $class: compute_class_name($num_of_columns, $total_columns, $screen_size);
      $classes: append($classes, $class, comma);

      $ratio: $num_of_columns / $total_columns * 100%;
      $ratio_classes: map-get($class_map, $ratio);
      @if $ratio_classes != null {
        $ratio_classes: append($ratio_classes, $class);
      } @else {
        $ratio_classes: ($class, );
      }
      $class_map: map-merge($class_map, ($ratio: $ratio_classes));

      $gcd: find_gcd($num_of_columns, $total_columns);
      @if $gcd > 1 {
        $exp: $num_of_columns / $gcd;
        $exp2: $total_columns / $gcd;

        @if $exp == round($exp) and $exp2 == round($exp2) {

          $class: compute_class_name($exp, $exp2, $screen_size);
          @if $exp2 != 1 {
            $classes: append($classes, $class, comma);

            $ratio_classes: map-get($class_map, $ratio);
            @if $ratio_classes != null {
              $ratio_classes: append($ratio_classes, $class);
            } @else {
              $ratio_classes: ($class, );
            }
            $class_map: map-merge($class_map, ($ratio: $ratio_classes));
          }

          @if $exp == 1 and $exp2 == 1 and $passed_case_1 == false {
            $passed_case_1: true;
            $class: compute_class_name($exp, $exp, $screen_size);
            $classes: append($classes, $class, comma);

            $ratio_classes: map-get($class_map, $ratio);
            @if $ratio_classes != null {
              $ratio_classes: append($ratio_classes, $class);
            } @else {
              $ratio_classes: ($class, );
            }
            $class_map: map-merge($class_map, ($ratio: $ratio_classes));
            
            $class: compute_class_name($exp, "", $screen_size);
            $classes: append($classes, $class, comma);

            $ratio_classes: map-get($class_map, $ratio);
            @if $ratio_classes != null {
              $ratio_classes: append($ratio_classes, $class);
            } @else {
              $ratio_classes: ($class, );
            }
            $class_map: map-merge($class_map, ($ratio: $ratio_classes));
          }
        }
      }
    }
  };

  @debug $class_map;

  @if $screen_size != "" {
    /* Screen #{$screen_size} - #{$min_width} */
    @media screen and (min-width: $min_width){
      #{$classes} {
        display:inline-block;
        letter-spacing: normal;
        word-spacing: normal;
        vertical-align: top;
        text-rendering: auto
      }
    }
  } @else {
    #{$classes} {
      display:inline-block;
      letter-spacing: normal;
      word-spacing: normal;
      vertical-align: top;
      text-rendering: auto
    }
  }
}
